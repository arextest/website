"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[387],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>u});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=c(r),h=n,u=d["".concat(p,".").concat(h)]||d[h]||f[h]||s;return r?a.createElement(u,i(i({ref:t},l),{},{components:r})):a.createElement(u,i({ref:t},l))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,i=new Array(s);i[0]=h;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:n,i[1]=o;for(var c=2;c<s;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},5201:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const s={sidebar_position:2,title:"Traffic Replay",keywords:["Regression test","Automation Testing","Traffic Replay"]},i=void 0,o={unversionedId:"chapter 3/Traffic Replay",id:"chapter 3/Traffic Replay",title:"Traffic Replay",description:"Start replay",source:"@site/docs/chapter 3/Traffic Replay.md",sourceDirName:"chapter 3",slug:"/chapter 3/Traffic Replay",permalink:"/docs/chapter 3/Traffic Replay",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/chapter 3/Traffic Replay.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Traffic Replay",keywords:["Regression test","Automation Testing","Traffic Replay"]},sidebar:"tutorialSidebar",previous:{title:"Pre-setting",permalink:"/docs/chapter 3/Pre-setting"},next:{title:"Force Record",permalink:"/docs/chapter 3/Force Record"}},p={},c=[{value:"Start replay",id:"start-replay",level:2},{value:"Report overview",id:"report-overview",level:3},{value:"Analyze response message differences",id:"analyze-response-message-differences",level:2}],l={toc:c},d="wrapper";function f(e){let{components:t,...s}=e;return(0,n.kt)(d,(0,a.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"start-replay"},"Start replay"),(0,n.kt)("p",null,"Once the application is set up, you are ready to replay recorded traffic to test."),(0,n.kt)("p",null,'Select the application which you are working with. The workspace displays previous replay lists. To begin the replay task, select "Start Replay" in the top right corner.'),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"\u56de\u653e\u9875\u9762",src:r(2586).Z,width:"3840",height:"1833"})),(0,n.kt)("p",null,"Enter the host that you want to test in the local/test environment in the ",(0,n.kt)("strong",{parentName:"p"},"Target Host")," field, and then specify the start and end time for replaying the recorded cases within this timeframe."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"\u5f00\u59cb\u56de\u653e",src:r(6973).Z,width:"592",height:"363"})),(0,n.kt)("h3",{id:"report-overview"},"Report overview"),(0,n.kt)("p",null,"After running, a detailed report will displayed in the workbench."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"\u56de\u653e\u62a5\u544a",src:r(6842).Z,width:"3324",height:"1585"})),(0,n.kt)("p",null,"Select ",(0,n.kt)("strong",{parentName:"p"},"Delete")," to delete this replay report."),(0,n.kt)("p",null,"Select ",(0,n.kt)("strong",{parentName:"p"},"Run Again")," to run this replay again."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Pass Rate"),"\uff1aRatio of successful replayed cases to all replayed cases (A successful replayed case means no difference compared with the recorded case)."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"API Pass Rate"),"\uff1aRatio of successful replayed interfaces to all replayed interfaces under ",(0,n.kt)("strong",{parentName:"p"},"Target Host")," (A successful replayed interface means no failed replayed cases in it)."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"API"),"\uff1aList of all the interfaces accessed in the replay."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"State"),'\uff1aThe state of replay\uff0c"',(0,n.kt)("strong",{parentName:"p"},"running"),'" means it\'s currently in progress, "',(0,n.kt)("strong",{parentName:"p"},"done"),'" means the replay is completed, "',(0,n.kt)("strong",{parentName:"p"},"interrupted"),'" means the replay was interrupted and you can select the "',(0,n.kt)("strong",{parentName:"p"},"Run again"),'" icon to run the test again.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Time consumed(s)"),'\uff1aExecution time of the replay test in "s".'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Total Cases"),"\uff1aThe number of replayed cases of this interface."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Passed\u3001Failed\u3001Invalid\u3001Blocked"),"\uff1aThe number of replayed cases that passed, failed, invalid, and interrupted, respectively."),(0,n.kt)("h2",{id:"analyze-response-message-differences"},"Analyze response message differences"),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},"Failed")," in the interface indicates that there are differences between recorded and replayed return response messages."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"\u63a5\u53e3\u4f9d\u8d56",src:r(7270).Z,width:"2750",height:"830"})),(0,n.kt)("p",null,"Select ",(0,n.kt)("strong",{parentName:"p"},"DiffScenes")," to analyze the differences."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"\u62a5\u6587\u5dee\u5f02",src:r(5687).Z,width:"2870",height:"952"})),(0,n.kt)("p",null,"The top left area displays the primary interface being tested, while the bottom area displays the primary interface and its external calls to third-party dependencies, such as databases, etc."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"\u63a5\u53e3\u4f9d\u8d56",src:r(8421).Z,width:"2870",height:"952"})),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Point of difference"),"\uff1aThis displays all the difference nodes in the replay test. For main interface validation, it mainly verifies the difference between the recorded and replayed response messages. For the validation of other external calls to third-party dependencies, it verifies by comparing the request message, such as the SQL statement for the database."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Scene Count"),"\uff1aThe number of scenes where the difference nodes occurs."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Case Count"),"\uff1aThe number of cases where the difference nodes occurs."),(0,n.kt)("p",null,"Select the node in ",(0,n.kt)("strong",{parentName:"p"},"Point of difference")," to view the difference in response message. Hover over the ",(0,n.kt)("strong",{parentName:"p"},"Path")," and it will display the specific location of the node in the response message."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"\u62a5\u6587\u5dee\u5f02",src:r(7433).Z,width:"2870",height:"952"})),(0,n.kt)("p",null,"Select ",(0,n.kt)("strong",{parentName:"p"},"Tree Mode")," to see the differences in tree mode."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"\u6811\u5f62",src:r(8814).Z,width:"2794",height:"1069"})),(0,n.kt)("p",null,'If you have some nodes that do not need to be compared, such as time, IP, and other fields that are not related to the business, you can click "Ignore Node" to skip these nodes, thus improving the efficiency of the replay.'),(0,n.kt)("p",null,"Select ",(0,n.kt)("strong",{parentName:"p"},"Diff Match")," to match the difference."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Diff Match",src:r(6433).Z,width:"1832",height:"305"})))}f.isMDXComponent=!0},5687:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/c3.diff-77f4ff7604589d94f01949d05c9fd746.png"},8814:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/c3.diff.tree-8d0dac691c730ad435c099458ad8a1d8.png"},8421:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/c3.diff2-5f0955ba49ac191d6d906a3c88a7e425.png"},7433:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/c3.diff3-398b7b586627260da0d4aa5c4edf6e1c.png"},7270:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/c3.diff4-03fc5cb4eb65f262d11e1f8f9e3fc1f9.png"},6433:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/c3.diffmatch-c632c15a7bd61b5106b13649b7672b9b.png"},6842:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/c3.report-3dcefe2d390bfd7e66d5d7ae8d59f70c.png"},2586:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/c3.reportlist-adbe5dc80192c4a621c5bd48f65df105.png"},6973:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/c3.start-0a3dc6d2c48c759ec3ac3b6328d7f60f.png"}}]);